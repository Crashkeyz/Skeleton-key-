
```cpp
#include <Arduino.h>
#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_ST7789.h>
#include <WiFi.h>
#include <HTTPClient.h>
#include <ArduinoJson.h>

// T-Embed 1101 Plus specific pins
#define TFT_CS         5
#define TFT_RST        22
#define TFT_DC         21
#define TFT_BACKLIGHT  4

// Button pins
#define BTN_UP         32
#define BTN_DOWN       33
#define BTN_LEFT       25
#define BTN_RIGHT      26
#define BTN_SELECT     27

// Buzzer
#define BUZZER_PIN     10

Adafruit_ST7789 tft = Adafruit_ST7789(TFT_CS, TFT_DC, TFT_RST);

enum AppState {
  SPLASH_SCREEN,
  MAIN_MENU,
  WIFI_SCANNER,
  SETTINGS,
  ABOUT
};
AppState currentState = SPLASH_SCREEN;

const char* menuItems[] = {
  "WiFi Scanner",
  "Settings",
  "About",
  "Test Hardware",
  "Exit"
};
int currentMenuIndex = 0;
int menuItemCount = 5;

void setup() {
  Serial.begin(115200);
  delay(1000);
  
  Serial.println("T-Embed 1101 Plus Starting...");
  
  // Initialize display
  pinMode(TFT_BACKLIGHT, OUTPUT);
  digitalWrite(TFT_BACKLIGHT, HIGH);
  tft.init(135, 240);
  tft.setRotation(3);
  tft.fillScreen(ST77XX_BLACK);
  tft.setTextSize(2);
  tft.setTextColor(ST77XX_WHITE);
  
  // Initialize buttons
  pinMode(BTN_UP, INPUT_PULLUP);
  pinMode(BTN_DOWN, INPUT_PULLUP);
  pinMode(BTN_LEFT, INPUT_PULLUP);
  pinMode(BTN_RIGHT, INPUT_PULLUP);
  pinMode(BTN_SELECT, INPUT_PULLUP);
  
  // Initialize buzzer
  pinMode(BUZZER_PIN, OUTPUT);
  digitalWrite(BUZZER_PIN, LOW);
  
  showSplashScreen();
  delay(2000);
  
  currentState = MAIN_MENU;
  showMainMenu();
}

void loop() {
  switch (currentState) {
    case MAIN_MENU:
      handleMainMenu();
      break;
    case WIFI_SCANNER:
      handleWifiScanner();
      break;
    case SETTINGS:
      handleSettings();
      break;
    case ABOUT:
      handleAbout();
      break;
    default:
      break;
  }
  delay(50);
}

void beep(int duration) {
  digitalWrite(BUZZER_PIN, HIGH);
  delay(duration);
  digitalWrite(BUZZER_PIN, LOW);
}

void showSplashScreen() {
  tft.fillScreen(ST77XX_BLACK);
  tft.setCursor(10, 30);
  tft.setTextSize(3);
  tft.setTextColor(ST77XX_RED);
  tft.println("T-EMBED");
  tft.setTextSize(2);
  tft.setTextColor(ST77XX_YELLOW);
  tft.setCursor(40, 70);
  tft.println("1101 Plus");
  tft.setTextSize(1);
  tft.setTextColor(ST77XX_WHITE);
  tft.setCursor(30, 110);
  tft.println("Skeleton Key v2.1");
  beep(100);
}

void showMainMenu() {
  tft.fillScreen(ST77XX_BLACK);
  tft.setTextSize(2);
  tft.setTextColor(ST77XX_WHITE);
  tft.setCursor(10, 10);
  tft.println("MAIN MENU");
  tft.drawLine(0, 30, 240, 30, ST77XX_WHITE);
  
  for (int i = 0; i < menuItemCount; i++) {
    if (i == currentMenuIndex) {
      tft.setTextColor(ST77XX_BLACK, ST77XX_WHITE);
    } else {
      tft.setTextColor(ST77XX_WHITE);
    }
    tft.setCursor(5, 35 + i * 20);
    tft.println(menuItems[i]);
  }
}

void handleMainMenu() {
  static unsigned long lastNav = 0;
  unsigned long now = millis();

  if (digitalRead(BTN_UP) == LOW && now - lastNav > 150) {
    currentMenuIndex = (currentMenuIndex - 1 + menuItemCount) % menuItemCount;
    showMainMenu();
    beep(50);
    lastNav = now;
  }
  
  if (digitalRead(BTN_DOWN) == LOW && now - lastNav > 150) {
    currentMenuIndex = (currentMenuIndex + 1) % menuItemCount;
    showMainMenu();
    beep(50);
    lastNav = now;
  }
  
  if (digitalRead(BTN_SELECT) == LOW && now - lastNav > 150) {
    switch (currentMenuIndex) {
      case 0:
        currentState = WIFI_SCANNER;
        scanWiFiNetworks();
        break;
      case 1:
        currentState = SETTINGS;
        showSettings();
        break;
      case 2:
        currentState = ABOUT;
        showAbout();
        break;
      case 3:
        testHardware();
        break;
      case 4:
        showSplashScreen();
        break;
    }
    beep(100);
    lastNav = now;
  }
}

void scanWiFiNetworks() {
  tft.fillScreen(ST77XX_BLACK);
  tft.setTextSize(2);
  tft.setTextColor(ST77XX_YELLOW);
  tft.setCursor(10, 10);
  tft.println("WiFi SCANNER");
  tft.setTextSize(1);
  tft.setTextColor(ST77XX_WHITE);
  tft.setCursor(10, 40);
  tft.println("Scanning...");
  
  WiFi.mode(WIFI_STA);
  WiFi.disconnect();
  delay(100);
  
  int networks = WiFi.scanNetworks();
  tft.fillRect(0, 40, 240, 200, ST77XX_BLACK);
  
  if (networks == 0) {
    tft.setCursor(10, 60);
    tft.println("No networks found");
  } else {
    tft.setCursor(10, 40);
    tft.printf("Found %d networks:", networks);
    
    for (int i = 0; i < min(networks, 6); i++) {
      tft.setCursor(10, 60 + i * 15);
      tft.printf("%d: %s (%ddBm)", i+1, 
                WiFi.SSID(i).substring(0, 12).c_str(), 
                WiFi.RSSI(i));
    }
  }
  
  tft.setCursor(10, 160);
  tft.println("LEFT: Back to Menu");
  
  while (digitalRead(BTN_LEFT) == HIGH) delay(50);
  
  currentState = MAIN_MENU;
  showMainMenu();
  WiFi.scanDelete();
}

void showSettings() {
  tft.fillScreen(ST77XX_BLACK);
  tft.setTextSize(2);
  tft.setTextColor(ST77XX_YELLOW);
  tft.setCursor(10, 10);
  tft.println("SETTINGS");
  tft.setTextSize(1);
  tft.setTextColor(ST77XX_WHITE);
  tft.setCursor(10, 40);
  tft.println("Device Configuration");
  tft.setCursor(10, 60);
  tft.println("LEFT: Back to Menu");
  
  while (digitalRead(BTN_LEFT) == HIGH) delay(50);
  
  currentState = MAIN_MENU;
  showMainMenu();
}

void showAbout() {
  tft.fillScreen(ST77XX_BLACK);
  tft.setTextSize(2);
  tft.setTextColor(ST77XX_YELLOW);
  tft.setCursor(10, 10);
  tft.println("ABOUT");
  tft.setTextSize(1);
  tft.setTextColor(ST77XX_WHITE);
  tft.setCursor(10, 40);
  tft.println("T-Embed 1101 Plus");
  tft.setCursor(10, 55);
  tft.println("ESP32-S3 @ 240MHz");
  tft.setCursor(10, 70);
  tft.printf("Flash: %dMB", ESP.getFlashChipSize() / (1024 * 1024));
  tft.setCursor(10, 85);
  tft.printf("PSRAM: %dMB", ESP.getPsramSize() / (1024 * 1024));
  tft.setCursor(10, 100);
  tft.printf("Free RAM: %dKB", ESP.getFreeHeap() / 1024);
  tft.setCursor(10, 130);
  tft.println("LEFT: Back to Menu");
  
  while (digitalRead(BTN_LEFT) == HIGH) delay(50);
  
  currentState = MAIN_MENU;
  showMainMenu();
}

void testHardware() {
  tft.fillScreen(ST77XX_BLACK);
  tft.setTextSize(2);
  tft.setTextColor(ST77XX_YELLOW);
  tft.setCursor(10, 10);
  tft.println("HARDWARE TEST");
  tft.setTextSize(1);
  
  tft.setCursor(10, 40);
  tft.println("Testing buzzer...");
  for (int i = 0; i < 3; i++) {
    beep(200);
    delay(300);
  }
  
  tft.setCursor(10, 60);
  tft.println("Testing backlight...");
  for (int i = 0; i < 3; i++) {
    digitalWrite(TFT_BACKLIGHT, LOW);
    delay(300);
    digitalWrite(TFT_BACKLIGHT, HIGH);
    delay(300);
  }
  
  tft.setCursor(10, 80);
  tft.println("Testing buttons...");
  tft.setCursor(10, 95);
  tft.println("Press any button to test");
  
  bool buttonPressed = false;
  unsigned long startTime = millis();
  while (millis() - startTime < 5000 && !buttonPressed) {
    if (digitalRead(BTN_UP) == LOW || digitalRead(BTN_DOWN) == LOW ||
        digitalRead(BTN_LEFT) == LOW || digitalRead(BTN_RIGHT) == LOW ||
        digitalRead(BTN_SELECT) == LOW) {
      buttonPressed = true;
    }
    delay(50);
  }
  
  tft.setCursor(10, 110);
  if (buttonPressed) {
    tft.println("Buttons: OK");
  } else {
    tft.println("Buttons: Not detected");
  }
  
  tft.setCursor(10, 130);
  tft.println("Test complete!");
  tft.setCursor(10, 150);
  tft.println("LEFT: Back to Menu");
  
  while (digitalRead(BTN_LEFT) == HIGH) delay(50);
  
  currentState = MAIN_MENU;
  showMainMenu();
}
```
